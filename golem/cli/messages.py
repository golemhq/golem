
USAGE_MSG = """
Usage: golem [--golem-dir] [-h] <command> [options]

Commands:
  run                    Run tests, suites or directories
  gui                    Start the Golem GUI module
  createproject          Create a new project
  createtest             Create a new test in a project
  createsuite            Create a new suite in a project
  createsuperuser        Create a new super user.

General Options:
  --golem-dir                 Path to Golem root directory
  -h, --help                  Show help.

Type: golem -h <command> for more help"""

RUN_USAGE_MSG = """
Usage: golem run <project> <test|suite|directory> [-b|--browsers]
                 [-p|--processes] [-e|--environments] [-t|--tags]
                 [-i|--interactive] [-r|--report] [--report-folder]
                 [--report-name] [--timestamp] 

  Run tests, suites or directories
  
  Run test:
    golem run project test_name
    golem run project test_name.py
    golem run project folder.test_name
    golem run project folder/test_name.py
  
  Run suite:
    golem run project suite_name
    golem run project suite_name.py
    golem run project folder.suite_name
    golem run project folder/suite_name.py
  
  Run every test in a directory:
    golem run project folder/

  Run every test in project/tests/ folder:
    golem run project .
    
  Filter tests by tags:
    golem run project . --tags "tag a" "tag b"
    golem run project suite_name -tags "tag a"
    golem run project folder/ --tags tag_a tag_b tag_c
    
  Start quick interactive console:
    golem run -i
    
  positional arguments:
    project              name of the project
    test|suite|dir       name of a single test, a suite or a
                         directory of tests.

  optional arguments:
    -b, --browsers       a list of browsers
    -p, --processes      number of processes (parallel run), default is 1
    -e, --environments   a list of environments
    -t, --tags           a list of tags to filter the tests.
                         A tag expression with 'and', 'or', and 'not' operators
                         can be used, enclosed in double quotes.
    -i, --interactive    run in interactive mode
    -r, --report         select reports to generate. Options are:
                         'junit', 'html', 'html-no-images', and 'json'.
                         The JSON report is generated by default in the
                         default location.
    --report-folder      absolute path of location to save report. Default is
                         <testdir>/projects/<project>/reports/<suite>/<timestamp>
    --report-name        filename for output report without path or extension.
                         Default is 'report'.
    --timestamp          used by the execution. Default is 
                         auto-generated with the format:
                         'year.month.day.hour.minutes.seconds.milliseconds'"""

GUI_USAGE_MSG = """
Usage: golem gui [-p|--port]
  
  Start the Golem GUI module

  optional arguments:
    --host              Default host is 127.0.0.1 (localhost). Use
                        0.0.0.0 to make the GUI publicly accessible.  
    -p, --port          which port to use, default is 5000
    -d, --debug         Run the GUI in debug mode, default is False"""

CREATEPROJECT_USAGE_MSG = """
Usage: golem createproject <project>
  
  Create a new project

  positional arguments:
    project             project name"""

CREATETEST_USAGE_MSG = """
Usage: golem createtest <project> <test>
  
  Create a new test inside a project

  positional arguments:
    project             an existing project name
    test                the name of the new test. Use dots
                        to create inside sub-folders."""

CREATESUITE_USAGE_MSG = """
Usage: golem createsuite <project> <suite>
  
  Create a new test suite inside a project

  positional arguments:
    project             an existing project name
    suite               the name of the new suite. Use dots
                        to create inside sub-folders."""

CREATESUPERUSER_USAGE_MSG = """
Usage: golem createsuperuser [-u|--username -e|email -p|--password
                              -n|--noinput]
  
  Create a new super user. Command is interactive unless --username,
  --password and --noinput are provided. Email is optional.

  optional arguments:
    -u, --username      
    -e, --email         Email address, optional.
    -p, --password      
    -n, --noinput       Do not prompt user. Username and password
                        must be provided.
"""

ADMIN_USAGE_MSG = """
Usage: golem-admin

  golem-admin createdirectory <directory-name> [-y|--yes]

  Create a new directory with the structure and files
  required for golem projects.
  
  positional arguments:
    directory-name      relative or absolute path for the
                        new test directory. Use '.' to use cwd.
  
  optional arguments:
    -y, --yes           Do not ask for confirmation"""


STANDALONE_USAGE = """
Golem Standalone

  Includes golem-admin, golem and webdriver-manager interfaces

  Example:
    golem golem-admin createdirectory <directory-name>
    golem webdriver-manager update
    golem run <project> <test>

  Type the following for more help:
    golem golem-admin -h
    golem webdriver-manager -h
    golem -h"""
